---
- name: Assert that connections references an interface
  ansible.builtin.assert:
    msg: "Connection {{ item.key }} should have mac or iface configured"
    that: ('mac' in item.value) or ('iface' in item.value)
  loop: "{{ networking_setup_connections | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Get connections details
  pablintino.base_infra.nmcli_get_connections:
  register: network_setup_nm_connections_details

- name: Get devices details
  pablintino.base_infra.nmcli_get_devices:
  register: networking_setup_detected_ifaces

- name: Add interfaces data to the connections if MAC provided
  vars:
    connection_iface: >-
      {{
        networking_setup_detected_ifaces.result |
        dict2items |
        selectattr('value.hwaddr', 'defined') |
        selectattr(
            'value.hwaddr',
            'regex',
            '^'+ item.value.mac + '$',
            'ignorecase'
        )
      }}
  ansible.builtin.set_fact:
    pbi_network_connections: >-
      {{
        pbi_network_connections |
        default(networking_setup_connections) |
        combine(
          {
            item.key: {
              'iface': ((connection_iface | first).value.device)
                if connection_iface | length == 1 else omit
            }
          }
          , recursive=True)
      }}
    cacheable: true
  loop: "{{ networking_setup_connections | dict2items }}"
  when: >-
    ('iface' not in item.value or item.value.iface == '') and
    ('mac' in item.value and item.value.mac != '')
  loop_control:
    label: "{{ item.key }}"

- name: Add current connection info to connections
  vars:
    current_connection: >-
      (
        network_setup_nm_connections_details.result |
        dict2items |
        map(attribute='value') |
        selectattr('connection_interface_name', 'defined') |
        selectattr(
          'connection_interface_name',
          'equalto',
          item.value.iface
        )
      )
      if ('iface' in item.value) else []
  ansible.builtin.set_fact:
    pbi_network_connections: >-
      {{
          pbi_network_connections |
          combine(
          {
              item.key: {
              'nm_connection_info':
                  current_connection | first
                  if current_connection | length == 1 else omit
              }
          }
          , recursive=True)
      }}
    cacheable: true
  loop: "{{ pbi_network_connections | dict2items }}"
  loop_control:
    label: "{{ item }}"

- name: Configure connection
  ansible.builtin.include_tasks:
    file: configure_connection.yml
  loop: "{{ pbi_network_connections | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Set management connection properties
  ansible.builtin.include_tasks:
    file: detect_managment_connection.yml
