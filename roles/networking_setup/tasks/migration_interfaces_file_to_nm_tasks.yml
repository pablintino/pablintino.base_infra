---
## Reached this point ifup/idown managed interfaces exists -> Migrate to NM

- name: Make Network Manager manage external connections
  become: true
  community.general.ini_file:
    path: "{{ pbi_nstp_nm_config_path }}"
    section: ifupdown
    option: managed
    value: "true"
    mode: '0600'

# Ensures that dhclient is still used and DUID is preserved (same client-id == same IP)
- name: Use dhclient instead
  become: true
  community.general.ini_file:
    path: "/etc/NetworkManager/conf.d/dhcp-client.conf"
    section: main
    option: dhcp
    value: "dhclient"
    mode: '0600'

- name: Comment out all the interfaces declared in the interfaces file
  become: true
  pablintino.base_infra.ifaces_file_delete_ifaces:
    skip_interfaces:
      - lo
      - loopback
  register: _pbi_nstp_nm_interfaces_file_removed

# Kill already existing dhclient processes to allow NM to take control of the iface
- name: Kill dhclient PIDs for each migrated interface
  vars:
    dhclient_regex: \\/?dhclient\\s(.)*\\s{{item}}$
  become: true
  ansible.builtin.command:
    cmd: "pgrep -f {{dhclient_regex}}"
  register: _pbi_nstp_iface_dhclient_pids
  failed_when: >-
    _pbi_nstp_iface_dhclient_pids.rc != 0 and
    _pbi_nstp_iface_dhclient_pids.rc != 1 and
    _pbi_nstp_iface_dhclient_pids.stderr != ''
  loop: "{{ _pbi_nstp_nm_interfaces_file_removed.removed_ifaces.keys()|list }}"

- name: Restart networking
  become: true
  ansible.builtin.systemd:
    state: restarted
    enabled: true
    name: networking

- name: Restart the Network Manager to apply changes
  become: true
  ansible.builtin.systemd:
    state: restarted
    enabled: true
    name: NetworkManager

- name: Fetch connections to remove the autogenerated ones that are not active
  pablintino.base_infra.nmcli_get_connections:
  register: _pbi_nstp_nm_connections_after_migration

- name: Remove unused autogenerated connections before making any change to the active one
  become: true
  ansible.builtin.command:
    cmd: "nmcli connection delete {{ item }}"
  loop: >-
    {{
      _pbi_nstp_nm_connections_after_migration.result |
      pablintino.base_infra.nmcli_filters_connections_by(
        active=false, ifaces=_pbi_nstp_nm_interfaces_file_removed.removed_ifaces
      ) |
      pablintino.base_infra.nmcli_filters_map_field('connection.id')
    }}
  loop_control:
    label: "{{ item }}"

- name: Ensure connections are configured to autoconnect and activate them
  become: true
  ansible.builtin.shell:
    # Perform this in a single shell call cause the modify will cause interruption of the connection that won't be
    # recovered if connection activation is not properly done
    cmd: >-
      nmcli connection modify {{ item }} connection.autoconnect yes &&
      nmcli connection up {{ item }}
  loop: >-
    {{
      _pbi_nstp_nm_connections_after_migration.result |
      pablintino.base_infra.nmcli_filters_connections_by(
        active=true, ifaces=_pbi_nstp_nm_interfaces_file_removed.removed_ifaces
      ) |
      pablintino.base_infra.nmcli_filters_map_field('connection.id')
    }}
  loop_control:
    label: "{{ item }}"
