---
- name: Verify
  hosts: all
  gather_facts: true
  tasks:
    - name: "Load ifaces test file"
      ansible.builtin.slurp:
        src: "/tmp/test-ifaces.yaml"
      register: pbi_tst_nstp_ifaces_test_file_slurp

    - name: Set prepare step facts
      vars:
        content: >-
          {{
            pbi_tst_nstp_ifaces_test_file_slurp['content'] |
            b64decode |
            from_yaml
          }}
      ansible.builtin.set_fact:
        "{{ item.key }}": "{{ item.value }}"
      loop: "{{ content | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Fetch connection data from cli
      ansible.builtin.shell:
        cmd: "nmcli con show {{ item }}"
      register: pbi_tst_nstp_molecule_data_out
      loop: "{{ pbi_tst_nstp_connections_config.keys() | list }}"
      changed_when: false

    - name: Parse connections data
      ansible.builtin.set_fact:
        pbi_tst_nstp_test_nmcli_data: >-
          {{
            pbi_tst_nstp_test_nmcli_data |
            default({}) |
            combine(
              {
                item.item: item.stdout | community.general.jc('nmcli') | first
              }
            )
          }}
      loop: "{{ pbi_tst_nstp_molecule_data_out.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Basic  assertions for the molecule connection
      vars:
        connection_data: >-
          {{
            pbi_tst_nstp_test_nmcli_data['molecule']
          }}
      ansible.builtin.assert:
        that:
          - "connection_data.state == 'activated'"
          - "connection_data.connection_type == '802-3-ethernet'"
          - "connection_data.ipv4_method == 'manual'"
          - "connection_data.ipv6_method == 'disabled'"
          - "connection_data.ipv4_never_default == 'no'"
          - "(connection_data.ip4_address_1 | ansible.utils.ipaddr) != false"
          - "(connection_data.ip4_gateway | ansible.utils.ipaddr) != false"
          - "(connection_data.ip4_dns_1 | ansible.utils.ipaddr) != false"
        quiet: true

    - name: Basic assertions for the internal connection
      vars:
        connection_data: >-
          {{
            pbi_tst_nstp_test_nmcli_data['internal']
          }}
      ansible.builtin.assert:
        that:
          - "connection_data.state == 'activated'"
          - "connection_data.connection_type == '802-3-ethernet'"
          - "connection_data.ipv4_method == 'manual'"
          - "connection_data.ipv6_method == 'disabled'"
          - "(connection_data.ip4_address_1 | ansible.utils.ipaddr) != false"
          - "connection_data.ip4_address_1 == '10.177.21.40/24'"
          - "connection_data.ip4_gateway == connection_data.ipv4_gateway"
          - "connection_data.ip4_gateway == None"
          - "connection_data.ipv4_addresses == connection_data.ip4_address_1"
          - "connection_data.ipv4_dns == '8.8.8.8'"
          - "connection_data.ip4_dns_1 == connection_data.ipv4_dns"
          - "connection_data.ipv4_never_default == 'yes'"
        quiet: true

    - name: Basic  assertions for the external connection
      vars:
        connection_data: >-
          {{
            pbi_tst_nstp_test_nmcli_data['external']
          }}
        dns_nameservers: >-
          {{
            connection_data |
            dict2items |
            selectattr("key", "search", "^ip4_dns") |
            map(attribute="value")
          }}
        extra_route: >-
          {{
            connection_data |
            dict2items |
            selectattr("value.dst", "defined") |
            selectattr("value.nh", "defined") |
            selectattr("value.dst", "equalto", "10.111.111.0/24") |
            selectattr("value.nh", "equalto", "10.177.100.100")
          }}
      ansible.builtin.assert:
        that:
          - "connection_data.state == 'activated'"
          - "connection_data.connection_type == '802-3-ethernet'"
          - "connection_data.ipv4_method == 'auto'"
          - "connection_data.ipv6_method == 'disabled'"
          - "(connection_data.ip4_address_1 | ansible.utils.ipaddr) != false"
          - "connection_data.ipv4_addresses == None"
          - "connection_data.ipv4_gateway == None"
          - "connection_data.ip4_gateway == connection_data.ipv4_gateway"
          - "connection_data.ipv4_dns == '1.1.1.1'"
          - "connection_data.ipv4_dns in dns_nameservers"
          # Ensure DHCP routes to the net and 0.0.0.0 are added
          - "connection_data.ip4_route_1 is defined"
          - "connection_data.ip4_route_2 is defined"
          # Ensure that the custom route was added
          - "extra_route | length == 1"
        quiet: true

    - name: Assert that the interface for each connection is the expected one
      ansible.builtin.assert:
        that:
          - "item.value.connection_interface_name == pbi_tst_nstp_ifaces[item.key]"
        quiet: true
      loop: "{{ pbi_tst_nstp_test_nmcli_data | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Fetch connections devices
      ansible.builtin.command:
        cmd: "nmcli -t -f DEVICE conn show"
      register: pbi_tst_nstp_connections_statuses
      changed_when: false

    - name: Assert that the we only have the expected number of connections
      vars:
        # Compare without taking into account the lo connection
        filtered_connections: >-
          {{
            pbi_tst_nstp_connections_statuses.stdout_lines |
            reject("search", "^lo") |
            reject("search", "^loopback")
          }}
      ansible.builtin.assert:
        that: >-
          filtered_connections | length == pbi_tst_nstp_test_nmcli_data | length
