---
- name: Gather variables for each operating system
  ansible.builtin.include_vars:
    file: "{{ item }}"
  register: package_install_loaded_vars_file
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      skip: true
      paths:
        - "{{ role_path }}/vars"

- name: Fail if not package file found for target OS
  ansible.builtin.fail:
    msg: "Unsupported OS. No predefined packages for {{ ansible_distribution }} {{ ansible_distribution_version }}"
  when: package_install_loaded_vars_file.results | length == 0

- name: Set packages and repositories to be installed
  ansible.builtin.set_fact:
    package_install_packages: "{{ package_install_base_packages | default([]) + package_install_extra_packages | default([]) }}"
    package_install_repositories: "{{ package_install_base_repositories | default([]) + package_install_extra_repositories | default([]) }}"

- name: Print packages to be installed
  vars:
    to_install:
      packages: "{{ package_install_packages }}"
      repositories: "{{ package_install_repositories }}"
  ansible.builtin.debug:
    var: to_install

- name: Add desidered repositories
  become: true
  become_method: su
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ package_install_repositories }}"
  when: ansible_os_family | lower == 'debian'

  ## TODO RPM usecase

- name: Add desidered apt packages
  become: true
  become_method: su
  environment:
    DEBIAN_FRONTEND: noninteractive # Disallow interactive setups
  ansible.builtin.apt:
    name: "{{ package_install_packages }}"
    state: present
    update_cache: true
  when: ansible_os_family | lower == 'debian'

- name: Add desidered rpm packages
  become: true
  become_method: su
  ansible.builtin.yum:
    name: "{{ package_install_packages }}"
    state: present
    update_cache: true
  when: ansible_os_family | lower == 'redhat'

- name: Install given packages
  vars:
    package_install_list: "{{ package_install_packages }}"
  ansible.builtin.include_tasks:
    file: cache_update_install_packages.yml
